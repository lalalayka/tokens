{
  "Global": {
    "Text": {
      "Primary": {
        "value": "{Grey.900}",
        "type": "color",
        "description": "Primary text and icon"
      },
      "Secondary": {
        "value": "{Grey.600}",
        "type": "color",
        "description": "Secondary text and icons"
      },
      "Disabled": {
        "value": "rgba({Text.Primary}, 0.6)",
        "type": "color",
        "description": "Disabled states"
      }
    },
    "Brand": {
      "Exness": {
        "Main": {
          "value": "{xns.400}",
          "type": "color",
          "description": "Alternative main color used by some components"
        },
        "UltraLight": {
          "value": "{xns.000}",
          "type": "color",
          "description": "Branded background"
        },
        "Light": {
          "value": "{xns.300}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{xns.500}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Grey.900}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        },
        "States": {
          "Outlined Resting Border": {
            "value": "rgba({Brand.Exness.Main}, 0.6)",
            "type": "color",
            "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
          },
          "Outlined Hover Background": {
            "value": "rgba({Brand.Exness.Main}, 0.1)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
          },
          "Outlined Active Background": {
            "value": "rgba({Brand.Exness.Main}, 0.2)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
          },
          "Contained Hover Background": {
            "value": "{Brand.Exness.Light}",
            "type": "color",
            "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
          },
          "Contained Active Background": {
            "value": "{Brand.Exness.Dark}",
            "type": "color",
            "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
          }
        }
      },
      "Neutral": {
        "Main": {
          "value": "{Grey.600}",
          "type": "color",
          "description": "Main color used by most components"
        },
        "UltraLight": {
          "value": "{Grey.000}",
          "type": "color",
          "description": "Branded background"
        },
        "Light": {
          "value": "{Grey.500}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{Grey.700}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Common.White}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        },
        "States": {
          "Outlined Resting Border": {
            "value": "rgba({Brand.Neutral.Main}, 0.6)",
            "type": "color",
            "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
          },
          "Outlined Hover Background": {
            "value": "rgba({Brand.Neutral.Main}, 0.1)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
          },
          "Outlined Active Background": {
            "value": "rgba({Brand.Neutral.Main}, 0.2)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
          },
          "Contained Hover Background": {
            "value": "{Brand.Neutral.Light}",
            "type": "color",
            "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
          },
          "Contained Active Background": {
            "value": "{Brand.Neutral.Dark}",
            "type": "color",
            "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
          }
        }
      },
      "PDA": {
        "Main": {
          "value": "{pda.400}",
          "type": "color",
          "description": "Main color used by most components in  PDA"
        },
        "UltraLight": {
          "value": "{pda.000}",
          "type": "color",
          "description": "Branded background"
        },
        "Light": {
          "value": "{pda.300}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{pda.500}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Common.White}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        },
        "States": {
          "Outlined Resting Border": {
            "value": "rgba({Brand.PDA.Main}, 0.6)",
            "type": "color",
            "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
          },
          "Outlined Hover Background": {
            "value": "rgba({Brand.PDA.Main}, 0.1)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
          },
          "Outlined Active Background": {
            "value": "rgba({Brand.PDA.Main}, 0.2)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
          },
          "Contained Hover Background": {
            "value": "{Brand.PDA.Light}",
            "type": "color",
            "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
          },
          "Contained Active Background": {
            "value": "{Brand.PDA.Dark}",
            "type": "color",
            "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
          }
        }
      },
      "PIM": {
        "Main": {
          "value": "{pim.400}",
          "type": "color",
          "description": "Main color used by most components in  PIM"
        },
        "UltraLight": {
          "value": "{pim.000}",
          "type": "color",
          "description": "Branded background"
        },
        "Light": {
          "value": "{pim.300}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{pim.500}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Common.White}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        },
        "States": {
          "Outlined Resting Border": {
            "value": "rgba({Brand.PIM.Main}, 0.6)",
            "type": "color",
            "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
          },
          "Outlined Hover Background": {
            "value": "rgba({Brand.PIM.Main}, 0.1)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
          },
          "Outlined Active Background": {
            "value": "rgba({Brand.PIM.Main}, 0.2)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
          },
          "Contained Hover Background": {
            "value": "{Brand.PIM.Light}",
            "type": "color",
            "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
          },
          "Contained Active Background": {
            "value": "{Brand.PIM.Dark}",
            "type": "color",
            "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
          }
        }
      }
    },
    "Success": {
      "Main": {
        "value": "{ocean-green.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{ocean-green.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{ocean-green.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Contrast": {
        "value": "{Common.White}",
        "type": "color",
        "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
      },
      "Alert": {
        "Background": {
          "value": "{ocean-green.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{ocean-green.700}",
          "type": "color",
          "description": "Text color for the success Alert component"
        }
      },
      "States": {
        "Outlined Resting Border": {
          "value": "rgba({Success.Main}, 0.6)",
          "type": "color",
          "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
        },
        "Outlined Hover Background": {
          "value": "rgba({Success.Main}, 0.1)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
        },
        "Outlined Active Background": {
          "value": "rgba({Success.Main}, 0.2)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
        },
        "Contained Hover Background": {
          "value": "{Success.Light}",
          "type": "color",
          "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
        },
        "Contained Active Background": {
          "value": "{Success.Dark}",
          "type": "color",
          "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
        }
      }
    },
    "Info": {
      "Main": {
        "value": "{royal-blue.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{royal-blue.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{royal-blue.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Contrast": {
        "value": "{Common.White}",
        "type": "color",
        "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
      },
      "Alert": {
        "Background": {
          "value": "{royal-blue.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{royal-blue.700}",
          "type": "color",
          "description": "Text color for the info Alert component"
        }
      },
      "States": {
        "Outlined Resting Border": {
          "value": "rgba({Info.Main}, 0.6)",
          "type": "color",
          "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
        },
        "Outlined Hover Background": {
          "value": "rgba({Info.Main}, 0.1)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
        },
        "Outlined Active Background": {
          "value": "rgba({Info.Main}, 0.2)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
        },
        "Contained Hover Background": {
          "value": "{Info.Light}",
          "type": "color",
          "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
        },
        "Contained Active Background": {
          "value": "{Info.Dark}",
          "type": "color",
          "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
        }
      }
    },
    "Error": {
      "Main": {
        "value": "{cardinal.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{cardinal.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{cardinal.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Contrast": {
        "value": "{Common.White}",
        "type": "color",
        "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
      },
      "Alert": {
        "Background": {
          "value": "{cardinal.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{cardinal.700}",
          "type": "color",
          "description": "Text color for the error Alert component"
        }
      },
      "States": {
        "Outlined Resting Border": {
          "value": "rgba({Error.Main}, 0.6)",
          "type": "color",
          "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
        },
        "Outlined Hover Background": {
          "value": "rgba({Error.Main}, 0.1)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
        },
        "Outlined Active Background": {
          "value": "rgba({Error.Main}, 0.2)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
        },
        "Contained Hover Background": {
          "value": "{Error.Light}",
          "type": "color",
          "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
        },
        "Contained Active Background": {
          "value": "{Error.Dark}",
          "type": "color",
          "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
        }
      }
    },
    "Warning": {
      "Main": {
        "value": "{corn.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{corn.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{corn.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Contrast": {
        "value": "{Grey.900}",
        "type": "color",
        "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
      },
      "Alert": {
        "Background": {
          "value": "{corn.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{corn.700}",
          "type": "color",
          "description": "Text color for the warning Alert component"
        }
      },
      "States": {
        "Outlined Resting Border": {
          "value": "rgba({Warning.Main}, 0.6)",
          "type": "color",
          "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
        },
        "Outlined Hover Background": {
          "value": "rgba({Warning.Main}, 0.1)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
        },
        "Outlined Active Background": {
          "value": "rgba({Warning.Main}, 0.2)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
        },
        "Contained Hover Background": {
          "value": "{Warning.Light}",
          "type": "color",
          "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
        },
        "Contained Active Background": {
          "value": "{Warning.Dark}",
          "type": "color",
          "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
        }
      }
    },
    "Action": {
      "Disabled": {
        "value": "rgba({Grey.900}, 0.2)",
        "type": "color",
        "description": "Disabled state for custom components"
      },
      "Disabled Background": {
        "value": "rgba({Grey.900}, 0.05)",
        "type": "color",
        "description": "Background for custom components in disabled state"
      },
      "Active": {
        "Exness": {
          "value": "rgba({Brand.Exness.Main}, 0.2)",
          "type": "color",
          "description": "Fill color for components in active state (List, Table, etc)"
        },
        "Neutral": {
          "value": "rgba({Brand.Neutral.Dark}, 0.2)",
          "type": "color",
          "description": "Fill color for components in active state (List, Table, etc)"
        },
        "PDA": {
          "value": "rgba({Brand.PDA.Main}, 0.2)",
          "type": "color",
          "description": "Fill color for components in active state (List, Table, etc)"
        },
        "PIM": {
          "value": "rgba({Brand.PIM.Main}, 0.2)",
          "type": "color",
          "description": "Fill color for components in active state (List, Table, etc)"
        }
      },
      "Hover": {
        "Exness": {
          "value": "rgba({Brand.Exness.Main}, 0.1)",
          "type": "color",
          "description": "Fill background for components in hover state (List, Table, etc)"
        },
        "Neutral": {
          "value": "rgba({Brand.Neutral.Dark}, 0.1)",
          "type": "color",
          "description": "Fill background for components in hover state (List, Table, etc)"
        },
        "PDA": {
          "value": "rgba({Brand.PDA.Main}, 0.1)",
          "type": "color",
          "description": "Fill background for components in hover state (List, Table, etc)"
        },
        "PIM": {
          "value": "rgba({Brand.PIM.Main}, 0.1)",
          "type": "color",
          "description": "Fill background for components in hover state (List, Table, etc)"
        }
      }
    },
    "Background": {
      "Paper": {
        "value": "{Common.White}",
        "type": "color",
        "description": "Background for components based on Material \"Paper\" (Cards, Sidebars, Dialogs, etc.)"
      },
      "Default": {
        "value": "{Grey.200}",
        "type": "color",
        "description": "Background for layout in general"
      }
    },
    "Other": {
      "Divider Light": {
        "value": "{Grey.400}",
        "type": "color"
      },
      "Divider Default": {
        "value": "{Grey.900}",
        "type": "color"
      },
      "Outlined Border": {
        "value": "rgba({Brand.Neutral.Dark}, 0.6)",
        "type": "color",
        "description": "Border style for outlined variant components in resting state (Text Field, Select, Chips, etc)"
      },
      "Backdrop Overlay": {
        "value": "rgba({Common.Black}, 0.4)",
        "type": "color",
        "description": "Backdrop for popup / dialog windows"
      }
    },
    "Common": {
      "White": {
        "value": "#ffffff",
        "type": "color"
      },
      "Black": {
        "value": "#000000",
        "type": "color"
      }
    },
    "Grey": {
      "100": {
        "value": "#f8f9fa",
        "type": "color"
      },
      "200": {
        "value": "#f4f5f6",
        "type": "color"
      },
      "300": {
        "value": "#eeeff0",
        "type": "color"
      },
      "400": {
        "value": "#e3e4e5",
        "type": "color"
      },
      "500": {
        "value": "#bcbec0",
        "type": "color"
      },
      "600": {
        "value": "#8d9194",
        "type": "color"
      },
      "700": {
        "value": "#606569",
        "type": "color"
      },
      "800": {
        "value": "#363d42",
        "type": "color"
      },
      "900": {
        "value": "#0f171c",
        "type": "color"
      },
      "000": {
        "value": "#eeeff0",
        "type": "color"
      }
    },
    "Visualisation categorical": {
      "Cyan": {
        "value": "#011949",
        "type": "color"
      },
      "Light Cyan": {
        "value": "#8eb1ed",
        "type": "color"
      },
      "Violet": {
        "value": "#3f4ac2",
        "type": "color"
      },
      "Turquoise": {
        "value": "#009d9a",
        "type": "color"
      },
      "Orange": {
        "value": "#ffa212",
        "type": "color"
      },
      "Green": {
        "value": "#5dc499",
        "type": "color"
      },
      "Purple": {
        "value": "#6929c4",
        "type": "color"
      },
      "Blue": {
        "value": "#357beb",
        "type": "color"
      },
      "Magenta": {
        "value": "#ee538b",
        "type": "color"
      },
      "Brown": {
        "value": "#8a3800",
        "type": "color"
      },
      "Lilac": {
        "value": "#a56eff",
        "type": "color"
      },
      "Lime": {
        "value": "#c4d220",
        "type": "color"
      },
      "Ultramarine": {
        "value": "#0ac9d6",
        "type": "color"
      }
    },
    "Visualisation blue": {
      "100": {
        "value": "#cee0ff",
        "type": "color"
      },
      "200": {
        "value": "#9ec1fc",
        "type": "color"
      },
      "300": {
        "value": "#72a3f9",
        "type": "color"
      },
      "400": {
        "value": "#437ee3",
        "type": "color"
      },
      "500": {
        "value": "#1951b0",
        "type": "color"
      },
      "600": {
        "value": "#011d4d",
        "type": "color"
      }
    },
    "xns": {
      "50": {
        "value": "#FFF4C5",
        "type": "color"
      },
      "100": {
        "value": "#FFEFA9",
        "type": "color"
      },
      "200": {
        "value": "#FFE471",
        "type": "color"
      },
      "300": {
        "value": "#FFDA39",
        "type": "color"
      },
      "400": {
        "value": "#FFCF01",
        "type": "color"
      },
      "500": {
        "value": "#E7BB00",
        "type": "color"
      },
      "600": {
        "value": "#CDA600",
        "type": "color"
      },
      "700": {
        "value": "#B39200",
        "type": "color"
      },
      "800": {
        "value": "#9A7D00",
        "type": "color"
      },
      "900": {
        "value": "#816800",
        "type": "color"
      },
      "000": {
        "value": "#FFF9DE",
        "type": "color"
      }
    },
    "pim": {
      "50": {
        "value": "{royal-blue.50}",
        "type": "color"
      },
      "100": {
        "value": "{royal-blue.100}",
        "type": "color"
      },
      "200": {
        "value": "{royal-blue.200}",
        "type": "color"
      },
      "300": {
        "value": "{royal-blue.300}",
        "type": "color"
      },
      "400": {
        "value": "{royal-blue.400}",
        "type": "color"
      },
      "500": {
        "value": "{royal-blue.500}",
        "type": "color"
      },
      "600": {
        "value": "{royal-blue.600}",
        "type": "color"
      },
      "700": {
        "value": "{royal-blue.700}",
        "type": "color"
      },
      "800": {
        "value": "{royal-blue.800}",
        "type": "color"
      },
      "900": {
        "value": "{royal-blue.900}",
        "type": "color"
      },
      "000": {
        "value": "{royal-blue.000}",
        "type": "color"
      }
    },
    "pda": {
      "50": {
        "value": "#D3CDE8",
        "type": "color"
      },
      "100": {
        "value": "#C7BFE1",
        "type": "color"
      },
      "200": {
        "value": "#AEA4D4",
        "type": "color"
      },
      "300": {
        "value": "#9688C7",
        "type": "color"
      },
      "400": {
        "value": "#7D6CBA",
        "type": "color"
      },
      "500": {
        "value": "#715EB3",
        "type": "color"
      },
      "600": {
        "value": "#6551AC",
        "type": "color"
      },
      "700": {
        "value": "#5D4A9E",
        "type": "color"
      },
      "800": {
        "value": "#554491",
        "type": "color"
      },
      "900": {
        "value": "#4C3D83",
        "type": "color"
      },
      "000": {
        "value": "#EFEBFF",
        "type": "color"
      }
    },
    "ocean-green": {
      "50": {
        "value": "#89D4B4",
        "type": "color"
      },
      "100": {
        "value": "#7CCFAC",
        "type": "color"
      },
      "200": {
        "value": "#62C69B",
        "type": "color"
      },
      "300": {
        "value": "#48BC8B",
        "type": "color"
      },
      "400": {
        "value": "#3CA478",
        "type": "color"
      },
      "500": {
        "value": "#37956D",
        "type": "color"
      },
      "600": {
        "value": "#318662",
        "type": "color"
      },
      "700": {
        "value": "#2C7757",
        "type": "color"
      },
      "800": {
        "value": "#26684C",
        "type": "color"
      },
      "900": {
        "value": "#215941",
        "type": "color"
      },
      "000": {
        "value": "#EBFFF6",
        "type": "color"
      }
    },
    "corn": {
      "50": {
        "value": "#FFEEA1",
        "type": "color"
      },
      "100": {
        "value": "#FFE988",
        "type": "color"
      },
      "200": {
        "value": "#FFE055",
        "type": "color"
      },
      "300": {
        "value": "#FFD622",
        "type": "color"
      },
      "400": {
        "value": "#EEC200",
        "type": "color"
      },
      "500": {
        "value": "#D4AD00",
        "type": "color"
      },
      "600": {
        "value": "#BB9800",
        "type": "color"
      },
      "700": {
        "value": "#A28400",
        "type": "color"
      },
      "800": {
        "value": "#886F00",
        "type": "color"
      },
      "900": {
        "value": "#6E5A00",
        "type": "color"
      },
      "000": {
        "value": "#FFF9DE",
        "type": "color"
      }
    },
    "royal-blue": {
      "50": {
        "value": "#CADAF7",
        "type": "color"
      },
      "100": {
        "value": "#B4CBF3",
        "type": "color"
      },
      "200": {
        "value": "#88ADEC",
        "type": "color"
      },
      "300": {
        "value": "#5C8EE5",
        "type": "color"
      },
      "400": {
        "value": "#3070DE",
        "type": "color"
      },
      "500": {
        "value": "#2263D3",
        "type": "color"
      },
      "600": {
        "value": "#1E59BD",
        "type": "color"
      },
      "700": {
        "value": "#1B4EA7",
        "type": "color"
      },
      "800": {
        "value": "#174491",
        "type": "color"
      },
      "900": {
        "value": "#143A7B",
        "type": "color"
      },
      "000": {
        "value": "#EBF2FF",
        "type": "color"
      }
    },
    "cardinal": {
      "50": {
        "value": "#F4C0C5",
        "type": "color"
      },
      "100": {
        "value": "#F0A9AE",
        "type": "color"
      },
      "200": {
        "value": "#E77982",
        "type": "color"
      },
      "300": {
        "value": "#DF4956",
        "type": "color"
      },
      "400": {
        "value": "#CC2432",
        "type": "color"
      },
      "500": {
        "value": "#B6202D",
        "type": "color"
      },
      "600": {
        "value": "#A11C27",
        "type": "color"
      },
      "700": {
        "value": "#8B1922",
        "type": "color"
      },
      "800": {
        "value": "#75151D",
        "type": "color"
      },
      "900": {
        "value": "#601117",
        "type": "color"
      },
      "000": {
        "value": "#FFEBED",
        "type": "color"
      }
    },
    "--shadow-s": {
      "value": [
        {
          "color": "rgba({Grey.800}, 0.12)",
          "type": "dropShadow",
          "x": "0",
          "y": "2",
          "blur": "8",
          "spread": "0"
        },
        {
          "color": "rgba({Grey.800}, 0.04)",
          "type": "dropShadow",
          "x": "0",
          "y": "2",
          "blur": "2",
          "spread": "0"
        }
      ],
      "type": "boxShadow"
    },
    "--shadow-m": {
      "value": [
        {
          "color": "rgba({Grey.800}, 0.12)",
          "type": "dropShadow",
          "x": "0",
          "y": "12",
          "blur": "40",
          "spread": "0"
        },
        {
          "color": "rgba({Grey.800}, 0.04)",
          "type": "dropShadow",
          "x": "0",
          "y": "2",
          "blur": "12",
          "spread": "0"
        }
      ],
      "type": "boxShadow"
    },
    "--shadow-l": {
      "value": [
        {
          "color": "rgba({Grey.800}, 0.12)",
          "type": "dropShadow",
          "x": "0",
          "y": "20",
          "blur": "56",
          "spread": "0"
        },
        {
          "color": "rgba({Grey.800}, 0.04)",
          "type": "dropShadow",
          "x": "0",
          "y": "2",
          "blur": "20",
          "spread": "0"
        }
      ],
      "type": "boxShadow"
    },
    "--s-2xs": {
      "value": "0.125rem",
      "type": "sizing",
      "description": "2px"
    },
    "--s-xs": {
      "value": "0.25rem",
      "type": "sizing",
      "description": "4px"
    },
    "--s-sm": {
      "value": "0.5rem",
      "type": "sizing",
      "description": "8px"
    },
    "--s-md": {
      "value": "1rem",
      "type": "sizing",
      "description": "16px"
    },
    "--s-lg": {
      "value": "1.5rem",
      "type": "sizing",
      "description": "24px"
    },
    "--s-xl": {
      "value": "2rem",
      "type": "sizing",
      "description": "32px"
    },
    "--s-2xl": {
      "value": "3rem",
      "type": "sizing",
      "description": "48px"
    },
    "--s-3xl": {
      "value": "4rem",
      "type": "sizing",
      "description": "64px"
    },
    "--s-4xl": {
      "value": "5rem",
      "type": "sizing",
      "description": "80px"
    },
    "--s-5xl": {
      "value": "6rem",
      "type": "sizing",
      "description": "96px"
    },
    "--br-0": {
      "value": "0",
      "type": "borderRadius"
    },
    "--br-xs": {
      "value": "{--s-2xs}",
      "type": "borderRadius"
    },
    "--br-sm": {
      "value": "{--s-xs}",
      "type": "borderRadius",
      "description": "4px"
    },
    "--br-md": {
      "value": "{--s-sm}",
      "type": "borderRadius",
      "description": "8px"
    },
    "--br-lg": {
      "value": "{--s-md}",
      "type": "borderRadius",
      "description": "16px"
    },
    "--br-round": {
      "value": "1000px",
      "type": "borderRadius",
      "description": "Round"
    },
    "--space-2xs": {
      "value": "{--s-2xs}",
      "type": "spacing"
    },
    "--space-xs": {
      "value": "{--s-xs}",
      "type": "spacing"
    },
    "--space-sm": {
      "value": "{--s-sm}",
      "type": "spacing"
    },
    "--space-md": {
      "value": "{--s-md}",
      "type": "spacing"
    },
    "--space-lg": {
      "value": "{--s-lg}",
      "type": "spacing"
    },
    "--space-xl": {
      "value": "{--s-xl}",
      "type": "spacing"
    },
    "--space-2xl": {
      "value": "{--s-2xl}",
      "type": "spacing"
    },
    "--space-3xl": {
      "value": "{--s-3xl}",
      "type": "spacing"
    },
    "--space-4xl": {
      "value": "{--s-4xl}",
      "type": "spacing"
    },
    "--space-5xl": {
      "value": "{--s-5xl}",
      "type": "spacing"
    },
    "fontFamilies": {
      "xns": {
        "value": "SF Pro",
        "type": "fontFamilies"
      }
    },
    "lineHeights": {
      "0": {
        "value": "16",
        "type": "lineHeights"
      },
      "1": {
        "value": "20",
        "type": "lineHeights"
      },
      "2": {
        "value": "22",
        "type": "lineHeights"
      },
      "3": {
        "value": "24",
        "type": "lineHeights"
      },
      "4": {
        "value": "26",
        "type": "lineHeights"
      },
      "5": {
        "value": "28",
        "type": "lineHeights"
      },
      "6": {
        "value": "32",
        "type": "lineHeights"
      },
      "7": {
        "value": "36",
        "type": "lineHeights"
      },
      "8": {
        "value": "42",
        "type": "lineHeights"
      },
      "9": {
        "value": "48",
        "type": "lineHeights"
      },
      "10": {
        "value": "54",
        "type": "lineHeights"
      },
      "11": {
        "value": "70",
        "type": "lineHeights"
      },
      "12": {
        "value": "78",
        "type": "lineHeights"
      },
      "13": {
        "value": "88",
        "type": "lineHeights"
      }
    },
    "fontWeights": {
      "semibold": {
        "value": "Semibold",
        "type": "fontWeights"
      },
      "regular": {
        "value": "Regular",
        "type": "fontWeights"
      }
    },
    "fontSize": {
      "0": {
        "value": "12",
        "type": "fontSizes"
      },
      "1": {
        "value": "14",
        "type": "fontSizes"
      },
      "2": {
        "value": "16",
        "type": "fontSizes"
      },
      "3": {
        "value": "18",
        "type": "fontSizes"
      },
      "4": {
        "value": "20",
        "type": "fontSizes"
      },
      "5": {
        "value": "24",
        "type": "fontSizes"
      },
      "6": {
        "value": "28",
        "type": "fontSizes"
      },
      "7": {
        "value": "32",
        "type": "fontSizes"
      },
      "8": {
        "value": "36",
        "type": "fontSizes"
      },
      "9": {
        "value": "42",
        "type": "fontSizes"
      },
      "10": {
        "value": "54",
        "type": "fontSizes"
      },
      "11": {
        "value": "60",
        "type": "fontSizes"
      },
      "12": {
        "value": "68",
        "type": "fontSizes"
      }
    },
    "letterSpacing": {
      "0": {
        "value": "0",
        "type": "letterSpacing"
      }
    },
    "paragraphSpacing": {
      "0": {
        "value": "0",
        "type": "paragraphSpacing"
      },
      "1": {
        "value": "8",
        "type": "paragraphSpacing"
      },
      "2": {
        "value": "12",
        "type": "paragraphSpacing"
      },
      "3": {
        "value": "16",
        "type": "paragraphSpacing"
      },
      "4": {
        "value": "24",
        "type": "paragraphSpacing"
      }
    },
    "Supporting styles": {
      "button-2": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.2}",
          "fontSize": "{fontSize.2}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "button-1": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.regular}",
          "lineHeight": "{lineHeights.1}",
          "fontSize": "{fontSize.1}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "caption": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.0}",
            "fontSize": "{fontSize.0}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.1}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.0}",
            "fontSize": "{fontSize.0}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.1}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "data-text": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.0}",
            "fontSize": "{fontSize.1}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.0}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.0}",
            "fontSize": "{fontSize.1}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.0}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      }
    },
    "Subtitles": {
      "Subtitle-4": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.1}",
          "fontSize": "{fontSize.1}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.2}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Subtitle-3": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.3}",
          "fontSize": "{fontSize.2}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.2}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Subtitle-2": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.4}",
          "fontSize": "{fontSize.3}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.2}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Subtitle-1": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.5}",
          "fontSize": "{fontSize.4}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.3}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      }
    },
    "Body": {
      "body-5": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.1}",
            "fontSize": "{fontSize.1}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.2}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.1}",
            "fontSize": "{fontSize.1}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.2}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "body-4": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.3}",
            "fontSize": "{fontSize.2}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.2}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.3}",
            "fontSize": "{fontSize.2}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.2}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "body-3": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.4}",
            "fontSize": "{fontSize.3}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.4}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.4}",
            "fontSize": "{fontSize.3}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.4}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "body-2": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.5}",
            "fontSize": "{fontSize.4}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.3}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.5}",
            "fontSize": "{fontSize.4}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.3}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "body-1": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.6}",
            "fontSize": "{fontSize.5}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.3}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.6}",
            "fontSize": "{fontSize.5}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.3}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      }
    },
    "Headings": {
      "Heading-5": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.6}",
          "fontSize": "{fontSize.5}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.4}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Heading-4": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.7}",
          "fontSize": "{fontSize.6}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Heading-3": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.8}",
          "fontSize": "{fontSize.7}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Heading-2": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.9}",
          "fontSize": "{fontSize.8}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Heading-1": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.10}",
          "fontSize": "{fontSize.9}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Hero-3": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.11}",
          "fontSize": "{fontSize.10}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Hero-2": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.12}",
          "fontSize": "{fontSize.11}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Hero-1": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.13}",
          "fontSize": "{fontSize.12}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      }
    },
    "textCase": {
      "none": {
        "value": "none",
        "type": "textCase"
      }
    },
    "textDecoration": {
      "none": {
        "value": "none",
        "type": "textDecoration"
      }
    }
  },
  "Palette/Design System": {
    "Text": {
      "Primary": {
        "value": "{Grey.900}",
        "type": "color",
        "description": "Primary text and icon"
      },
      "Secondary": {
        "value": "{Grey.600}",
        "type": "color",
        "description": "Secondary text and icons"
      },
      "Disabled": {
        "value": "rgba({Text.Primary}, 0.6)",
        "type": "color",
        "description": "Disabled states"
      }
    },
    "Brand": {
      "Exness": {
        "Main": {
          "value": "{xns.400}",
          "type": "color",
          "description": "Alternative main color used by some components"
        },
        "UltraLight": {
          "value": "{xns.000}",
          "type": "color",
          "description": "Branded background"
        },
        "Light": {
          "value": "{xns.300}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{xns.500}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Grey.900}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        },
        "States": {
          "Outlined Resting Border": {
            "value": "rgba({Brand.Exness.Main}, 0.6)",
            "type": "color",
            "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
          },
          "Outlined Hover Background": {
            "value": "rgba({Brand.Exness.Main}, 0.1)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
          },
          "Outlined Active Background": {
            "value": "rgba({Brand.Exness.Main}, 0.2)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
          },
          "Contained Hover Background": {
            "value": "{Brand.Exness.Light}",
            "type": "color",
            "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
          },
          "Contained Active Background": {
            "value": "{Brand.Exness.Dark}",
            "type": "color",
            "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
          }
        }
      },
      "Neutral": {
        "Main": {
          "value": "{Grey.600}",
          "type": "color",
          "description": "Main color used by most components"
        },
        "UltraLight": {
          "value": "{Grey.000}",
          "type": "color",
          "description": "Branded background"
        },
        "Light": {
          "value": "{Grey.500}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{Grey.700}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Common.White}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        },
        "States": {
          "Outlined Resting Border": {
            "value": "rgba({Brand.Neutral.Main}, 0.6)",
            "type": "color",
            "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
          },
          "Outlined Hover Background": {
            "value": "rgba({Brand.Neutral.Main}, 0.1)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
          },
          "Outlined Active Background": {
            "value": "rgba({Brand.Neutral.Main}, 0.2)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
          },
          "Contained Hover Background": {
            "value": "{Brand.Neutral.Light}",
            "type": "color",
            "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
          },
          "Contained Active Background": {
            "value": "{Brand.Neutral.Dark}",
            "type": "color",
            "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
          }
        }
      },
      "PDA": {
        "Main": {
          "value": "{pda.400}",
          "type": "color",
          "description": "Main color used by most components in  PDA"
        },
        "UltraLight": {
          "value": "{pda.000}",
          "type": "color",
          "description": "Branded background"
        },
        "Light": {
          "value": "{pda.300}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{pda.500}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Common.White}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        },
        "States": {
          "Outlined Resting Border": {
            "value": "rgba({Brand.PDA.Main}, 0.6)",
            "type": "color",
            "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
          },
          "Outlined Hover Background": {
            "value": "rgba({Brand.PDA.Main}, 0.1)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
          },
          "Outlined Active Background": {
            "value": "rgba({Brand.PDA.Main}, 0.2)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
          },
          "Contained Hover Background": {
            "value": "{Brand.PDA.Light}",
            "type": "color",
            "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
          },
          "Contained Active Background": {
            "value": "{Brand.PDA.Dark}",
            "type": "color",
            "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
          }
        }
      },
      "PIM": {
        "Main": {
          "value": "{pim.400}",
          "type": "color",
          "description": "Main color used by most components in  PIM"
        },
        "UltraLight": {
          "value": "{pim.000}",
          "type": "color",
          "description": "Branded background"
        },
        "Light": {
          "value": "{pim.300}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{pim.500}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Common.White}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        },
        "States": {
          "Outlined Resting Border": {
            "value": "rgba({Brand.PIM.Main}, 0.6)",
            "type": "color",
            "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
          },
          "Outlined Hover Background": {
            "value": "rgba({Brand.PIM.Main}, 0.1)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
          },
          "Outlined Active Background": {
            "value": "rgba({Brand.PIM.Main}, 0.2)",
            "type": "color",
            "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
          },
          "Contained Hover Background": {
            "value": "{Brand.PIM.Light}",
            "type": "color",
            "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
          },
          "Contained Active Background": {
            "value": "{Brand.PIM.Dark}",
            "type": "color",
            "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
          }
        }
      }
    },
    "Success": {
      "Main": {
        "value": "{ocean-green.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{ocean-green.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{ocean-green.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Contrast": {
        "value": "{Common.White}",
        "type": "color",
        "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
      },
      "Alert": {
        "Background": {
          "value": "{ocean-green.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{ocean-green.700}",
          "type": "color",
          "description": "Text color for the success Alert component"
        }
      },
      "States": {
        "Outlined Resting Border": {
          "value": "rgba({Success.Main}, 0.6)",
          "type": "color",
          "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
        },
        "Outlined Hover Background": {
          "value": "rgba({Success.Main}, 0.1)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
        },
        "Outlined Active Background": {
          "value": "rgba({Success.Main}, 0.2)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
        },
        "Contained Hover Background": {
          "value": "{Success.Light}",
          "type": "color",
          "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
        },
        "Contained Active Background": {
          "value": "{Success.Dark}",
          "type": "color",
          "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
        }
      }
    },
    "Info": {
      "Main": {
        "value": "{royal-blue.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{royal-blue.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{royal-blue.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Contrast": {
        "value": "{Common.White}",
        "type": "color",
        "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
      },
      "Alert": {
        "Background": {
          "value": "{royal-blue.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{royal-blue.700}",
          "type": "color",
          "description": "Text color for the info Alert component"
        }
      },
      "States": {
        "Outlined Resting Border": {
          "value": "rgba({Info.Main}, 0.6)",
          "type": "color",
          "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
        },
        "Outlined Hover Background": {
          "value": "rgba({Info.Main}, 0.1)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
        },
        "Outlined Active Background": {
          "value": "rgba({Info.Main}, 0.2)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
        },
        "Contained Hover Background": {
          "value": "{Info.Light}",
          "type": "color",
          "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
        },
        "Contained Active Background": {
          "value": "{Info.Dark}",
          "type": "color",
          "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
        }
      }
    },
    "Error": {
      "Main": {
        "value": "{cardinal.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{cardinal.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{cardinal.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Contrast": {
        "value": "{Common.White}",
        "type": "color",
        "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
      },
      "Alert": {
        "Background": {
          "value": "{cardinal.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{cardinal.700}",
          "type": "color",
          "description": "Text color for the error Alert component"
        }
      },
      "States": {
        "Outlined Resting Border": {
          "value": "rgba({Error.Main}, 0.6)",
          "type": "color",
          "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
        },
        "Outlined Hover Background": {
          "value": "rgba({Error.Main}, 0.1)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
        },
        "Outlined Active Background": {
          "value": "rgba({Error.Main}, 0.2)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
        },
        "Contained Hover Background": {
          "value": "{Error.Light}",
          "type": "color",
          "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
        },
        "Contained Active Background": {
          "value": "{Error.Dark}",
          "type": "color",
          "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
        }
      }
    },
    "Warning": {
      "Main": {
        "value": "{corn.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{corn.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{corn.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Contrast": {
        "value": "{Grey.900}",
        "type": "color",
        "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
      },
      "Alert": {
        "Background": {
          "value": "{corn.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{corn.700}",
          "type": "color",
          "description": "Text color for the warning Alert component"
        }
      },
      "States": {
        "Outlined Resting Border": {
          "value": "rgba({Warning.Main}, 0.6)",
          "type": "color",
          "description": "Used for outlined variant components in resting state (Button, Chip, etc)"
        },
        "Outlined Hover Background": {
          "value": "rgba({Warning.Main}, 0.1)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in hover state (Button, etc)"
        },
        "Outlined Active Background": {
          "value": "rgba({Warning.Main}, 0.2)",
          "type": "color",
          "description": "Fill background color for outlined & text variant components in active state (Button, etc)"
        },
        "Contained Hover Background": {
          "value": "{Warning.Light}",
          "type": "color",
          "description": "Fill background for contained variant components in hover state (Button, FAB, etc)"
        },
        "Contained Active Background": {
          "value": "{Warning.Dark}",
          "type": "color",
          "description": "Fill background for contained variant components in active state (Button, FAB, etc)"
        }
      }
    },
    "Action": {
      "Disabled": {
        "value": "rgba({Grey.900}, 0.2)",
        "type": "color",
        "description": "Disabled state for custom components"
      },
      "Disabled Background": {
        "value": "rgba({Grey.900}, 0.05)",
        "type": "color",
        "description": "Background for custom components in disabled state"
      },
      "Active": {
        "Exness": {
          "value": "rgba({Brand.Exness.Main}, 0.2)",
          "type": "color",
          "description": "Fill color for components in active state (List, Table, etc)"
        },
        "Neutral": {
          "value": "rgba({Brand.Neutral.Main}, 0.2)",
          "type": "color",
          "description": "Fill color for components in active state (List, Table, etc)"
        },
        "PDA": {
          "value": "rgba({Brand.PDA.Main}, 0.2)",
          "type": "color",
          "description": "Fill color for components in active state (List, Table, etc)"
        },
        "PIM": {
          "value": "rgba({Brand.PIM.Main}, 0.2)",
          "type": "color",
          "description": "Fill color for components in active state (List, Table, etc)"
        }
      },
      "Hover": {
        "Exness": {
          "value": "rgba({Brand.Exness.Main}, 0.1)",
          "type": "color",
          "description": "Fill background for components in hover state (List, Table, etc)"
        },
        "Neutral": {
          "value": "rgba({Brand.Neutral.Main}, 0.1)",
          "type": "color",
          "description": "Fill background for components in hover state (List, Table, etc)"
        },
        "PDA": {
          "value": "rgba({Brand.PDA.Main}, 0.1)",
          "type": "color",
          "description": "Fill background for components in hover state (List, Table, etc)"
        },
        "PIM": {
          "value": "rgba({Brand.PIM.Main}, 0.1)",
          "type": "color",
          "description": "Fill background for components in hover state (List, Table, etc)"
        }
      }
    },
    "Background": {
      "Paper": {
        "value": "{Common.White}",
        "type": "color",
        "description": "Background color for components based on Material \"Paper\" (Cards, Sidebars, etc.)"
      },
      "Default": {
        "value": "{Grey.200}",
        "type": "color",
        "description": "Background for design layout in general"
      }
    },
    "Other": {
      "Divider Light": {
        "value": "{Grey.400}",
        "type": "color"
      },
      "Divider Default": {
        "value": "{Grey.900}",
        "type": "color"
      },
      "Outlined Border": {
        "value": "rgba({Brand.Neutral.Dark}, 0.6)",
        "type": "color",
        "description": "Border style for outlined variant components in resting state (Text Field, Select, Chips, etc)"
      },
      "Backdrop Overlay": {
        "value": "rgba({Common.Black}, 0.4)",
        "type": "color",
        "description": "Backdrop for popup / dialog windows"
      }
    },
    "Common": {
      "White": {
        "value": "#ffffff",
        "type": "color"
      },
      "Black": {
        "value": "#000000",
        "type": "color"
      }
    },
    "Grey": {
      "100": {
        "value": "#f8f9fa",
        "type": "color"
      },
      "200": {
        "value": "#f4f5f6",
        "type": "color"
      },
      "300": {
        "value": "#eeeff0",
        "type": "color"
      },
      "400": {
        "value": "#e3e4e5",
        "type": "color"
      },
      "500": {
        "value": "#bcbec0",
        "type": "color"
      },
      "600": {
        "value": "#8d9194",
        "type": "color"
      },
      "700": {
        "value": "#606569",
        "type": "color"
      },
      "800": {
        "value": "#363d42",
        "type": "color"
      },
      "900": {
        "value": "#0f171c",
        "type": "color"
      },
      "000": {
        "value": "#eeeff0",
        "type": "color"
      }
    },
    "Visualisation categorical": {
      "Cyan": {
        "value": "#011949",
        "type": "color"
      },
      "Light Cyan": {
        "value": "#8eb1ed",
        "type": "color"
      },
      "Violet": {
        "value": "#3f4ac2",
        "type": "color"
      },
      "Turquoise": {
        "value": "#009d9a",
        "type": "color"
      },
      "Orange": {
        "value": "#ffa212",
        "type": "color"
      },
      "Green": {
        "value": "#5dc499",
        "type": "color"
      },
      "Purple": {
        "value": "#6929c4",
        "type": "color"
      },
      "Blue": {
        "value": "#357beb",
        "type": "color"
      },
      "Magenta": {
        "value": "#ee538b",
        "type": "color"
      },
      "Brown": {
        "value": "#8a3800",
        "type": "color"
      },
      "Lilac": {
        "value": "#a56eff",
        "type": "color"
      },
      "Lime": {
        "value": "#c4d220",
        "type": "color"
      },
      "Ultramarine": {
        "value": "#0ac9d6",
        "type": "color"
      }
    },
    "Visualisation blue": {
      "100": {
        "value": "#cee0ff",
        "type": "color"
      },
      "200": {
        "value": "#9ec1fc",
        "type": "color"
      },
      "300": {
        "value": "#72a3f9",
        "type": "color"
      },
      "400": {
        "value": "#437ee3",
        "type": "color"
      },
      "500": {
        "value": "#1951b0",
        "type": "color"
      },
      "600": {
        "value": "#011d4d",
        "type": "color"
      }
    }
  },
  "Palette/Compact": {
    "Text": {
      "Primary": {
        "value": "{Grey.900}",
        "type": "color",
        "description": "Primary text"
      },
      "Secondary": {
        "value": "{Grey.600}",
        "type": "color",
        "description": "Secondary text"
      },
      "Disabled": {
        "value": "rgba({Text.Primary}, 0.6)",
        "type": "color",
        "description": "Disabled states"
      }
    },
    "Success": {
      "Main": {
        "value": "{ocean-green.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{ocean-green.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{ocean-green.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Alert": {
        "Background": {
          "value": "{ocean-green.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{ocean-green.700}",
          "type": "color",
          "description": "Text color for the success Alert component"
        }
      }
    },
    "Info": {
      "Main": {
        "value": "{royal-blue.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{royal-blue.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{royal-blue.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Alert": {
        "Background": {
          "value": "{royal-blue.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{royal-blue.700}",
          "type": "color",
          "description": "Text color for the info Alert component"
        }
      }
    },
    "Error": {
      "Main": {
        "value": "{cardinal.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{cardinal.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{cardinal.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Alert": {
        "Background": {
          "value": "{cardinal.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{cardinal.700}",
          "type": "color",
          "description": "Text color for the error Alert component"
        }
      }
    },
    "Warning": {
      "Main": {
        "value": "{corn.400}",
        "type": "color",
        "description": "Used for alert component"
      },
      "Light": {
        "value": "{corn.300}",
        "type": "color",
        "description": "Alternative light shade"
      },
      "Dark": {
        "value": "{corn.500}",
        "type": "color",
        "description": "Alternative dark shade"
      },
      "Alert": {
        "Background": {
          "value": "{corn.000}",
          "type": "color",
          "description": "Notification background"
        },
        "Content": {
          "value": "{corn.700}",
          "type": "color",
          "description": "Text color for the warning Alert component"
        }
      }
    },
    "Action": {
      "Disabled": {
        "value": "rgba({Grey.900}, 0.2)",
        "type": "color",
        "description": "Disabled state for custom components"
      },
      "Disabled Background": {
        "value": "rgba({Grey.900}, 0.05)",
        "type": "color",
        "description": "Background for custom components in disabled state"
      }
    },
    "Background": {
      "Paper": {
        "value": "{Common.White}",
        "type": "color"
      },
      "Default": {
        "value": "{Grey.200}",
        "type": "color"
      }
    },
    "Other": {
      "Outlined Border": {
        "value": "rgba({Brand.Neutral.Dark}, 0.6)",
        "type": "color",
        "description": "Border style for outlined variant components in resting state (Text Field, Select, Chips, etc) #60656999"
      }
    },
    "Grey": {
      "100": {
        "value": "#f8f9fa",
        "type": "color"
      },
      "200": {
        "value": "#f4f5f6",
        "type": "color"
      },
      "300": {
        "value": "#eeeff0",
        "type": "color"
      },
      "400": {
        "value": "#e3e4e5",
        "type": "color"
      },
      "500": {
        "value": "#bcbec0",
        "type": "color"
      },
      "600": {
        "value": "#8d9194",
        "type": "color"
      },
      "700": {
        "value": "#606569",
        "type": "color"
      },
      "800": {
        "value": "#363d42",
        "type": "color"
      },
      "900": {
        "value": "#0f171c",
        "type": "color"
      },
      "000": {
        "value": "#eeeff0",
        "type": "color"
      }
    }
  },
  "Palette/Infographics": {
    "Categorical/A": {
      "Cyan": {
        "value": "#011949",
        "type": "color"
      },
      "Turquoise": {
        "value": "#009d9a",
        "type": "color"
      },
      "Orange": {
        "value": "#ffa212",
        "type": "color"
      },
      "Purple": {
        "value": "#6929c4",
        "type": "color"
      },
      "Blue": {
        "value": "#357beb",
        "type": "color"
      },
      "Magenta": {
        "value": "#ee538b",
        "type": "color"
      }
    },
    "Categorical/B": {
      "Light Cyan": {
        "value": "#8eb1ed",
        "type": "color"
      },
      "Magenta": {
        "value": "#ee538b",
        "type": "color"
      },
      "Violet": {
        "value": "#3f4ac2",
        "type": "color"
      },
      "Orange": {
        "value": "#ffa212",
        "type": "color"
      },
      "Turquoise": {
        "value": "#009d9a",
        "type": "color"
      },
      "Purple": {
        "value": "#6929c4",
        "type": "color"
      }
    },
    "Categorical/C": {
      "Purple": {
        "value": "#6929c4",
        "type": "color"
      },
      "Blue": {
        "value": "#357beb",
        "type": "color"
      },
      "Magenta": {
        "value": "#ee538b",
        "type": "color"
      },
      "Brown": {
        "value": "#8a3800",
        "type": "color"
      },
      "Lilac": {
        "value": "#a56eff",
        "type": "color"
      },
      "Lime": {
        "value": "#c4d220",
        "type": "color"
      }
    },
    "Categorical/D": {
      "Ultramarine": {
        "value": "#0ac9d6",
        "type": "color"
      },
      "Brown": {
        "value": "#8a3800",
        "type": "color"
      },
      "Cyan": {
        "value": "#011949",
        "type": "color"
      },
      "Light Cyan": {
        "value": "#8eb1ed",
        "type": "color"
      },
      "Turquoise": {
        "value": "#009d9a",
        "type": "color"
      },
      "Violet": {
        "value": "#3f4ac2",
        "type": "color"
      }
    },
    "Categorical/E": {
      "Lime": {
        "value": "#c4d220",
        "type": "color"
      },
      "Blue": {
        "value": "#357beb",
        "type": "color"
      },
      "Turquoise": {
        "value": "#009d9a",
        "type": "color"
      },
      "Violet": {
        "value": "#3f4ac2",
        "type": "color"
      },
      "Orange": {
        "value": "#ffa212",
        "type": "color"
      },
      "Ultramarine": {
        "value": "#0ac9d6",
        "type": "color"
      }
    },
    "Visualisation PIM": {
      "100": {
        "value": "#cee0ff",
        "type": "color"
      },
      "200": {
        "value": "#9ec1fc",
        "type": "color"
      },
      "300": {
        "value": "#72a3f9",
        "type": "color"
      },
      "400": {
        "value": "#437ee3",
        "type": "color"
      },
      "500": {
        "value": "#1951b0",
        "type": "color"
      },
      "600": {
        "value": "#011d4d",
        "type": "color"
      }
    }
  },
  "Palette/Exness": {
    "Brand": {
      "Exness": {
        "Main": {
          "value": "{xns.400}",
          "type": "color",
          "description": "Alternative main color used by some components"
        },
        "UltraLight": {
          "value": "{xns.000}",
          "type": "color"
        },
        "Light": {
          "value": "{xns.300}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{xns.500}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Grey.900}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        }
      }
    },
    "Action": {
      "Active": {
        "Exness": {
          "value": "rgba({Brand.Exness.Main}, 0.2)",
          "type": "color"
        }
      },
      "Hover": {
        "Exness": {
          "value": "rgba({Brand.Exness.Main}, 0.1)",
          "type": "color"
        }
      }
    }
  },
  "Palette/Neutral": {
    "Brand": {
      "Neutral": {
        "Main": {
          "value": "{Grey.600}",
          "type": "color",
          "description": "Main color used by most components"
        },
        "UltraLight": {
          "value": "{Grey.000}",
          "type": "color"
        },
        "Light": {
          "value": "{Grey.500}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{Grey.700}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Common.White}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        }
      }
    },
    "Action": {
      "Active": {
        "Neutral": {
          "value": "rgba({Brand.Neutral.Dark}, 0.2)",
          "type": "color"
        }
      },
      "Hover": {
        "Neutral": {
          "value": "rgba({Brand.Neutral.Dark}, 0.1)",
          "type": "color"
        }
      }
    }
  },
  "Palette/PIM": {
    "Brand": {
      "PIM": {
        "Main": {
          "value": "{pim.400}",
          "type": "color",
          "description": "Main color used by most components in  PIM"
        },
        "UltraLight": {
          "value": "{pim.000}",
          "type": "color"
        },
        "Light": {
          "value": "{pim.300}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{pim.500}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Common.White}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        }
      }
    },
    "Action": {
      "Active": {
        "PIM": {
          "value": "rgba({Brand.PIM.Main}, 0.2)",
          "type": "color"
        }
      },
      "Hover": {
        "PIM": {
          "value": "rgba({Brand.PIM.Main}, 0.1)",
          "type": "color"
        }
      }
    }
  },
  "Palette/PDA": {
    "Brand": {
      "PDA": {
        "Main": {
          "value": "{pda.400}",
          "type": "color",
          "description": "Main color used by most components in  PDA"
        },
        "UltraLight": {
          "value": "{pda.000}",
          "type": "color"
        },
        "Light": {
          "value": "{pda.300}",
          "type": "color",
          "description": "Alternative light shade"
        },
        "Dark": {
          "value": "{pda.500}",
          "type": "color",
          "description": "Alternative dark shade"
        },
        "Contrast": {
          "value": "{Common.White}",
          "type": "color",
          "description": "Color that keeps a contrast ratio above AA when XX.main is used as a bg. color"
        }
      }
    },
    "Action": {
      "Active": {
        "PDA": {
          "value": "rgba({Brand.PDA.Main}, 0.2)",
          "type": "color"
        }
      },
      "Hover": {
        "PDA": {
          "value": "rgba({Brand.PDA.Main}, 0.1)",
          "type": "color"
        }
      }
    }
  },
  "Common": {
    "--shadow-s": {
      "value": [
        {
          "color": "rgba({Grey.800}, 0.12)",
          "type": "dropShadow",
          "x": "0",
          "y": "2",
          "blur": "8",
          "spread": "0"
        },
        {
          "color": "rgba({Grey.800}, 0.04)",
          "type": "dropShadow",
          "x": "0",
          "y": "2",
          "blur": "2",
          "spread": "0"
        }
      ],
      "type": "boxShadow"
    },
    "--shadow-m": {
      "value": [
        {
          "color": "rgba({Grey.800}, 0.12)",
          "type": "dropShadow",
          "x": "0",
          "y": "12",
          "blur": "40",
          "spread": "0"
        },
        {
          "color": "rgba({Grey.800}, 0.04)",
          "type": "dropShadow",
          "x": "0",
          "y": "2",
          "blur": "12",
          "spread": "0"
        }
      ],
      "type": "boxShadow"
    },
    "--shadow-l": {
      "value": [
        {
          "color": "rgba({Grey.800}, 0.12)",
          "type": "dropShadow",
          "x": "0",
          "y": "20",
          "blur": "56",
          "spread": "0"
        },
        {
          "color": "rgba({Grey.800}, 0.04)",
          "type": "dropShadow",
          "x": "0",
          "y": "2",
          "blur": "20",
          "spread": "0"
        }
      ],
      "type": "boxShadow"
    },
    "--s-2xs": {
      "value": "0.125rem",
      "type": "sizing",
      "description": "2px"
    },
    "--s-xs": {
      "value": "0.25rem",
      "type": "sizing",
      "description": "4px"
    },
    "--s-sm": {
      "value": "0.5rem",
      "type": "sizing",
      "description": "8px"
    },
    "--s-md": {
      "value": "1rem",
      "type": "sizing",
      "description": "16px"
    },
    "--s-lg": {
      "value": "1.5rem",
      "type": "sizing",
      "description": "24px"
    },
    "--s-xl": {
      "value": "2rem",
      "type": "sizing",
      "description": "32px"
    },
    "--s-2xl": {
      "value": "3rem",
      "type": "sizing",
      "description": "48px"
    },
    "--s-3xl": {
      "value": "4rem",
      "type": "sizing",
      "description": "64px"
    },
    "--s-4xl": {
      "value": "5rem",
      "type": "sizing",
      "description": "80px"
    },
    "--s-5xl": {
      "value": "6rem",
      "type": "sizing",
      "description": "96px"
    },
    "--br-0": {
      "value": "0",
      "type": "borderRadius"
    },
    "--br-xs": {
      "value": "{--s-2xs}",
      "type": "borderRadius"
    },
    "--br-sm": {
      "value": "{--s-xs}",
      "type": "borderRadius",
      "description": "4px"
    },
    "--br-md": {
      "value": "{--s-sm}",
      "type": "borderRadius",
      "description": "8px"
    },
    "--br-lg": {
      "value": "{--s-md}",
      "type": "borderRadius",
      "description": "16px"
    },
    "--br-round": {
      "value": "1000px",
      "type": "borderRadius",
      "description": "Round"
    },
    "--space-2xs": {
      "value": "{--s-2xs}",
      "type": "spacing"
    },
    "--space-xs": {
      "value": "{--s-xs}",
      "type": "spacing"
    },
    "--space-sm": {
      "value": "{--s-sm}",
      "type": "spacing"
    },
    "--space-md": {
      "value": "{--s-md}",
      "type": "spacing"
    },
    "--space-lg": {
      "value": "{--s-lg}",
      "type": "spacing"
    },
    "--space-xl": {
      "value": "{--s-xl}",
      "type": "spacing"
    },
    "--space-2xl": {
      "value": "{--s-2xl}",
      "type": "spacing"
    },
    "--space-3xl": {
      "value": "{--s-3xl}",
      "type": "spacing"
    },
    "--space-4xl": {
      "value": "{--s-4xl}",
      "type": "spacing"
    },
    "--space-5xl": {
      "value": "{--s-5xl}",
      "type": "spacing"
    },
    "fontFamilies": {
      "xns": {
        "value": "SF Pro",
        "type": "fontFamilies"
      }
    },
    "lineHeights": {
      "0": {
        "value": "16",
        "type": "lineHeights"
      },
      "1": {
        "value": "20",
        "type": "lineHeights"
      },
      "2": {
        "value": "22",
        "type": "lineHeights"
      },
      "3": {
        "value": "24",
        "type": "lineHeights"
      },
      "4": {
        "value": "26",
        "type": "lineHeights"
      },
      "5": {
        "value": "28",
        "type": "lineHeights"
      },
      "6": {
        "value": "32",
        "type": "lineHeights"
      },
      "7": {
        "value": "36",
        "type": "lineHeights"
      },
      "8": {
        "value": "42",
        "type": "lineHeights"
      },
      "9": {
        "value": "48",
        "type": "lineHeights"
      },
      "10": {
        "value": "54",
        "type": "lineHeights"
      },
      "11": {
        "value": "70",
        "type": "lineHeights"
      },
      "12": {
        "value": "78",
        "type": "lineHeights"
      },
      "13": {
        "value": "88",
        "type": "lineHeights"
      }
    },
    "fontWeights": {
      "semibold": {
        "value": "Semibold",
        "type": "fontWeights"
      },
      "regular": {
        "value": "Regular",
        "type": "fontWeights"
      }
    },
    "fontSize": {
      "0": {
        "value": "12",
        "type": "fontSizes"
      },
      "1": {
        "value": "14",
        "type": "fontSizes"
      },
      "2": {
        "value": "16",
        "type": "fontSizes"
      },
      "3": {
        "value": "18",
        "type": "fontSizes"
      },
      "4": {
        "value": "20",
        "type": "fontSizes"
      },
      "5": {
        "value": "24",
        "type": "fontSizes"
      },
      "6": {
        "value": "28",
        "type": "fontSizes"
      },
      "7": {
        "value": "32",
        "type": "fontSizes"
      },
      "8": {
        "value": "36",
        "type": "fontSizes"
      },
      "9": {
        "value": "42",
        "type": "fontSizes"
      },
      "10": {
        "value": "54",
        "type": "fontSizes"
      },
      "11": {
        "value": "60",
        "type": "fontSizes"
      },
      "12": {
        "value": "68",
        "type": "fontSizes"
      }
    },
    "letterSpacing": {
      "0": {
        "value": "0",
        "type": "letterSpacing"
      }
    },
    "paragraphSpacing": {
      "0": {
        "value": "0",
        "type": "paragraphSpacing"
      },
      "1": {
        "value": "8",
        "type": "paragraphSpacing"
      },
      "2": {
        "value": "12",
        "type": "paragraphSpacing"
      },
      "3": {
        "value": "16",
        "type": "paragraphSpacing"
      },
      "4": {
        "value": "24",
        "type": "paragraphSpacing"
      }
    },
    "Supporting styles": {
      "button-2": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.2}",
          "fontSize": "{fontSize.2}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "button-1": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.regular}",
          "lineHeight": "{lineHeights.1}",
          "fontSize": "{fontSize.1}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "caption": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.0}",
            "fontSize": "{fontSize.0}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.1}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.0}",
            "fontSize": "{fontSize.0}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.1}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "data-text": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.0}",
            "fontSize": "{fontSize.1}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.0}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.0}",
            "fontSize": "{fontSize.1}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.0}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      }
    },
    "Subtitles": {
      "Subtitle-4": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.1}",
          "fontSize": "{fontSize.1}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.2}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Subtitle-3": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.3}",
          "fontSize": "{fontSize.2}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.2}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Subtitle-2": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.4}",
          "fontSize": "{fontSize.3}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.2}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Subtitle-1": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.5}",
          "fontSize": "{fontSize.4}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.3}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      }
    },
    "Body": {
      "body-5": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.1}",
            "fontSize": "{fontSize.1}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.2}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.1}",
            "fontSize": "{fontSize.1}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.2}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "body-4": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.3}",
            "fontSize": "{fontSize.2}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.2}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.3}",
            "fontSize": "{fontSize.2}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.2}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "body-3": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.4}",
            "fontSize": "{fontSize.3}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.4}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.4}",
            "fontSize": "{fontSize.3}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.4}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "body-2": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.5}",
            "fontSize": "{fontSize.4}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.3}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.5}",
            "fontSize": "{fontSize.4}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.3}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      },
      "body-1": {
        "semibold": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.semibold}",
            "lineHeight": "{lineHeights.6}",
            "fontSize": "{fontSize.5}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.3}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        },
        "regular": {
          "value": {
            "fontFamily": "{fontFamilies.xns}",
            "fontWeight": "{fontWeights.regular}",
            "lineHeight": "{lineHeights.6}",
            "fontSize": "{fontSize.5}",
            "letterSpacing": "{letterSpacing.0}",
            "paragraphSpacing": "{paragraphSpacing.3}",
            "paragraphIndent": "{paragraphIndent.0}",
            "textCase": "{textCase.none}",
            "textDecoration": "{textDecoration.none}"
          },
          "type": "typography"
        }
      }
    },
    "Headings": {
      "Heading-5": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.6}",
          "fontSize": "{fontSize.5}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.4}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Heading-4": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.7}",
          "fontSize": "{fontSize.6}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Heading-3": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.8}",
          "fontSize": "{fontSize.7}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Heading-2": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.9}",
          "fontSize": "{fontSize.8}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Heading-1": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.10}",
          "fontSize": "{fontSize.9}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Hero-3": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.11}",
          "fontSize": "{fontSize.10}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Hero-2": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.12}",
          "fontSize": "{fontSize.11}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      },
      "Hero-1": {
        "value": {
          "fontFamily": "{fontFamilies.xns}",
          "fontWeight": "{fontWeights.semibold}",
          "lineHeight": "{lineHeights.13}",
          "fontSize": "{fontSize.12}",
          "letterSpacing": "{letterSpacing.0}",
          "paragraphSpacing": "{paragraphSpacing.0}",
          "paragraphIndent": "{paragraphIndent.0}",
          "textCase": "{textCase.none}",
          "textDecoration": "{textDecoration.none}"
        },
        "type": "typography"
      }
    },
    "textCase": {
      "none": {
        "value": "none",
        "type": "textCase"
      }
    },
    "textDecoration": {
      "none": {
        "value": "none",
        "type": "textDecoration"
      }
    }
  },
  "$themes": [
    {
      "id": "829b560d882038aee9aaa50b35896cb363d8d600",
      "name": "Default",
      "selectedTokenSets": {
        "Global": "enabled",
        "Palette/Compact": "disabled",
        "Palette/Infographics": "disabled",
        "Palette/Design System": "disabled",
        "Common": "disabled",
        "Palette/PIM": "disabled",
        "Palette/PDA": "disabled",
        "Palette/Exness": "disabled",
        "Palette/Neutral": "disabled"
      },
      "$figmaStyleReferences": {}
    },
    {
      "id": "d267fb0b74f5867063494825841afcbfadc1d400",
      "name": "DS / Web / Light",
      "selectedTokenSets": {
        "Global": "source",
        "Palette/Compact": "disabled",
        "Palette/Infographics": "disabled",
        "Palette/Design System": "enabled",
        "Common": "enabled",
        "Palette/PIM": "disabled",
        "Palette/PDA": "disabled",
        "Palette/Exness": "disabled",
        "Palette/Neutral": "disabled"
      },
      "$figmaStyleReferences": {
        "Text.Primary": "S:c7941f5bb95a539efd8c14d853c461360eed379c,",
        "Text.Secondary": "S:bbc36552a8e382e9178ce89704ec1794ccbf4471,",
        "Text.Disabled": "S:18e8ba0221d4f7262227630fe8e8665520cdddee,",
        "Brand.Exness.Main": "S:ff0d8cd449f92e9b195eb649c39261500c8498b8,",
        "Brand.Exness.UltraLight": "S:d7fcd8512661502a3f822a6d2f1af9855c17ae72,",
        "Brand.Exness.Light": "S:f63ec633fe453bcfc103c4310f067fe638a3fa39,",
        "Brand.Exness.Dark": "S:24b07672b81d5f6f7783522e26d5ff63deb5ad2c,",
        "Brand.Exness.Contrast": "S:f2c48e506670b653ecaafe50853c3d5ed9e13998,",
        "Brand.Exness.States.Outlined Resting Border": "S:d312b6d664799018f1237c27a588a4aee5c7da4f,",
        "Brand.Exness.States.Outlined Hover Background": "S:7a278af1e34c36cf74d4eab81babc1a4637ed6fe,",
        "Brand.Exness.States.Outlined Active Background": "S:b5b2f3c7e07763ade4deb39972907e7acaa7de00,",
        "Brand.Exness.States.Contained Hover Background": "S:323a7ed9fa8ea2d7c5136d52439a37ef4e6c6c90,",
        "Brand.Exness.States.Contained Active Background": "S:c2cc427e84ece2ca1223f2dbd0fa2f904c65ccc0,",
        "Brand.Neutral.Main": "S:b5b47a7c180b9f95ba54613f02ebe66206eba01b,",
        "Brand.Neutral.UltraLight": "S:ac8531a63a58a6153ca0b9f20c3b8179268e35a3,",
        "Brand.Neutral.Light": "S:fcee6b4e6b06b7c1de4dfbfbb9fa243e97c11a5c,",
        "Brand.Neutral.Dark": "S:869e772988f765d77a376891d87bfc1724a274fc,",
        "Brand.Neutral.Contrast": "S:9954cfee6078ce45ee340d2a9c1fed6a83ccd4bd,",
        "Brand.Neutral.States.Outlined Resting Border": "S:a0bab96bbb8e7d072c5bc8569271325bf119e6e4,",
        "Brand.Neutral.States.Outlined Hover Background": "S:e91e6c63af24afde5a6595cec220d3ed7d2db212,",
        "Brand.Neutral.States.Outlined Active Background": "S:b58781131e716f46a0c4ec77c8eedf3df88b5b9f,",
        "Brand.Neutral.States.Contained Hover Background": "S:4cd2c02cad91cd2f9520fff345884689f51ed390,",
        "Brand.Neutral.States.Contained Active Background": "S:cdc822d5212e263fa77654962adea8117da514bd,",
        "Brand.PDA.Main": "S:cb91cff7b271a5544fd7f7a14fe9961e7f12758e,",
        "Brand.PDA.UltraLight": "S:68bd8ed3b680057e0e8f67ea2738117a6ca0662a,",
        "Brand.PDA.Light": "S:d0f3b6acddfa29e69e5870d11724a95d9ba3246a,",
        "Brand.PDA.Dark": "S:b993b6c0a9a36f877ebb56c3e117f8563a718d12,",
        "Brand.PDA.Contrast": "S:0e42bde6762c5205bf25dd741e747a2f22d16bd6,",
        "Brand.PDA.States.Outlined Resting Border": "S:b5a0a9e55cb0babcb1a5e5439c5ec08d1bb85720,",
        "Brand.PDA.States.Outlined Hover Background": "S:a0c4cc0f1bcb6763aaddac402af443792ca9f33d,",
        "Brand.PDA.States.Outlined Active Background": "S:ea4015a05f5ab0f69dc7a81dba3acaf7223da794,",
        "Brand.PDA.States.Contained Hover Background": "S:d64baa4b6ca9e317d9b8ea720b3f73d5050e48f8,",
        "Brand.PDA.States.Contained Active Background": "S:dc29f6ff1db68f96cbcd35dc2779b6214db39c47,",
        "Brand.PIM.Main": "S:99084f265b234e38b2fecef23a42ca8efd20fa5e,",
        "Brand.PIM.UltraLight": "S:68d11a3981674b39837b385960eb599f51c89694,",
        "Brand.PIM.Light": "S:fd3702926202a859f20fb8424b781c0f2763c45d,",
        "Brand.PIM.Dark": "S:5a814c5634ae7ec755e26b05217ce6a6b9d001f2,",
        "Brand.PIM.Contrast": "S:008930164eb12a8732d714fc744f4d0d87f1ca01,",
        "Brand.PIM.States.Outlined Resting Border": "S:e1d8e7b7a4e7a35e544d174a094adf6545904542,",
        "Brand.PIM.States.Outlined Hover Background": "S:375e2dad2129f7bf2d404d1d65a9c80bfe446ce6,",
        "Brand.PIM.States.Outlined Active Background": "S:b27359105c865096a151e7fd762dfc278a5cdc56,",
        "Brand.PIM.States.Contained Hover Background": "S:7374e8fb8d5e74a2eda4b56081d7cea6beb804f6,",
        "Brand.PIM.States.Contained Active Background": "S:c7eac2b1f70c970c35bd4998f33cfadb130225ee,",
        "Success.Main": "S:e436501f53205ffc2ff6e4292b3b1cfb58bcc864,",
        "Success.Light": "S:3ac1a954d434ee9122acb3f7df7555a8237ff753,",
        "Success.Dark": "S:e8ce67b6e5d222f359a680fde224fde95438576d,",
        "Success.Contrast": "S:c14b19a1384f05d0e2efae7fbedc5b73efec85e8,",
        "Success.Alert.Background": "S:98bdee73acf995eb75eb609584cd3cda4d92bcc9,",
        "Success.Alert.Content": "S:27a8935f051f678a9f2da87846247077bcd1643f,",
        "Success.States.Outlined Resting Border": "S:bb8aa65953e2b4c33524a5243f063e44484e6884,",
        "Success.States.Outlined Hover Background": "S:a847c9def7bebaaf487d2fe136a1a2f33521efb1,",
        "Success.States.Outlined Active Background": "S:f91b6315228ca41d60402f2f4f5ba37cc2cee138,",
        "Success.States.Contained Hover Background": "S:9b68a58aced0841f20611f921b57d179981f0b3f,",
        "Success.States.Contained Active Background": "S:312d9896e40b1c1dccd1e50add109ea74673ff3d,",
        "Info.Main": "S:bd85cddac85d77a9bc63184fa7bbef4246218681,",
        "Info.Light": "S:0b5b2b38a6f25c1ca994c5d6f1042fd8a230977e,",
        "Info.Dark": "S:c4735c9f3995f2f090c773fbeef362519ae67f19,",
        "Info.Contrast": "S:cd6cdf98008d3f5398823896804f1b2ec5262c42,",
        "Info.Alert.Background": "S:e5bd0397378b470f37c8c6d1b8c43951200251bf,",
        "Info.Alert.Content": "S:3cefd02b23b5a07568d1158010afccedecae82e7,",
        "Info.States.Outlined Resting Border": "S:7eaaf227de0da6ee16dc7ad4f66695e19bc95d52,",
        "Info.States.Outlined Hover Background": "S:6403d98e9a736120aac8c0f2a64b065bf32c6930,",
        "Info.States.Outlined Active Background": "S:2fc59b454d43666c256a8ae96353ed4862cb084c,",
        "Info.States.Contained Hover Background": "S:df58911bd4ff3e11cbdb5f05b5bebcec565c0f97,",
        "Info.States.Contained Active Background": "S:bb112ac47875d4501187e571c457e317d3bb82dd,",
        "Error.Main": "S:7742eae090bda63d9310393a1b7590a478dc332c,",
        "Error.Light": "S:7e2a0bdcb8633fc2e8d8e4570d537ae1b1d7e2c7,",
        "Error.Dark": "S:fae461b2af0bc175a150b64d8d76196e7e490a83,",
        "Error.Contrast": "S:2972ddd6e5cab1670c8d54f1c21aa35e9daf0c0b,",
        "Error.Alert.Background": "S:d03ab5e5d88359bed878db499a47dd0dc7be17ae,",
        "Error.Alert.Content": "S:3ad569cd6e160e911cfc13a62fc8460d35aaedfa,",
        "Error.States.Outlined Resting Border": "S:6dcfa3657a9f6f9a8b23f79d905ef3ff1df5a328,",
        "Error.States.Outlined Hover Background": "S:a724df031efb92d23efc891a365b1abd24b1ecc6,",
        "Error.States.Outlined Active Background": "S:5509d56c52abf48611feded5f1d00d47a5a15153,",
        "Error.States.Contained Hover Background": "S:39011be38097baeccf11d8f28835ff90330ccb65,",
        "Error.States.Contained Active Background": "S:9d3b24f68ada59aaf35dc5ea500471566b0c3dd8,",
        "Warning.Main": "S:7af61492b4dcb4ed5b23f2a9765a4569ddb7fb4e,",
        "Warning.Light": "S:36eac2173f5dc4974dcfd234fe35a9fb16bea4b1,",
        "Warning.Dark": "S:b48fbe95ed73dce63a7c936ee794447580a9b0d3,",
        "Warning.Contrast": "S:f68b94a32c1593b0f21c67d8a4f5eb15391dfd0d,",
        "Warning.Alert.Background": "S:cd82c1a2de5a03d8694b93781dae6fd1c7d5ae9e,",
        "Warning.Alert.Content": "S:ff91489f33c0235617b7a6431b37134ddf2e544d,",
        "Warning.States.Outlined Resting Border": "S:aa92afd0861c8b4c9ceee483948ceb974b102010,",
        "Warning.States.Outlined Hover Background": "S:4eb5746963a09b7887cd9c94a70be1bd5aec6478,",
        "Warning.States.Outlined Active Background": "S:dfad8cb1dff600457df138eb6e7ce35a2f3310e5,",
        "Warning.States.Contained Hover Background": "S:8223acd7abb9dbd17cd3c1a99d403e6b63ecd38e,",
        "Warning.States.Contained Active Background": "S:1e8bdcf13e859f45b24392500954434caa812cc5,",
        "Action.Disabled": "S:22d7c60ecd4dd38b1ffc74f7ecdef84fe7be31f5,",
        "Action.Disabled Background": "S:bc5d2411c2b5d2226de4333013cd26277ab97829,",
        "Action.Active.Exness": "S:aa6c755a7cdecf4631b9c3edc9b9e85a3d20bfb6,",
        "Action.Active.Neutral": "S:59fff9c3271b133405d2fbdde83cf5208552c4be,",
        "Action.Active.PDA": "S:b0b75aa1ffb40157f85496b1190db4e6cce250eb,",
        "Action.Active.PIM": "S:8a1596eaa73df3a39595bd67e2768ba45f59d9e8,",
        "Action.Hover.Exness": "S:aa713cf2bec98281dca60a6eb96e5057ecea2799,",
        "Action.Hover.Neutral": "S:d985b249f6ba759501c807b4c77c2b0495a5a7ef,",
        "Action.Hover.PDA": "S:060065e5846854ffba13d191b155ac18ea7b9c5a,",
        "Action.Hover.PIM": "S:3f90eea8391f635dbd11adea3c25444d40db9158,",
        "Background.Paper": "S:d3c3c47820a04caefc4d9d6c92effb99cff22e57,",
        "Background.Default": "S:c7b3ae2f096873b8cea844f181ab726c29380626,",
        "Other.Divider Light": "S:9743c1c0db84d02bcc9a32ca1c57771d847b74a7,",
        "Other.Divider Default": "S:9bfad7bdeac24d44e763bb804cd14203af37085f,",
        "Other.Outlined Border": "S:580180234de247a1fa5e0dcddce4fd73014e784f,",
        "Other.Backdrop Overlay": "S:8af5028e67ff1a3759dcb046e935c4a4baf6036f,",
        "Common.White": "S:e11d4edf04494d350e2086d15c4bd4e526e507b8,",
        "Common.Black": "S:0c0c851e85546a0c8e81a00cb824fd17f5372eb7,",
        "Grey.100": "S:75b35f8f6c0856c312014033875d65587fd8768a,",
        "Grey.200": "S:0d40b90a8b79ab8bb77aa164bce09e097ce257cb,",
        "Grey.300": "S:a03d3cbe23a18b1103c16167cd537dd9527a1562,",
        "Grey.400": "S:99ff05a0c7b28d1773356f9a5646d7e204b8ea03,",
        "Grey.500": "S:801cc739e5d2eaf609bf789d305ee2729e61d2a0,",
        "Grey.600": "S:f52c7a27f0b6c4917793bff93e5947db032133f5,",
        "Grey.700": "S:14c3bb63919ad071c3b9dc7365755fa72fac105a,",
        "Grey.800": "S:0cb7934c09d4d650ae761a3270afab41553ae296,",
        "Grey.900": "S:8cbaa48aa67ff89b7d073cf7b3ee63f0a8c84848,",
        "Grey.000": "S:86299d88e2963f915182a20a8a6beb928e62d15d,",
        "Visualisation categorical.Cyan": "S:c9a9b433ec368b50bbbb9d0b36641c66fbd98cee,",
        "Visualisation categorical.Light Cyan": "S:fea763f2af85adf60b7a2275c31f58175eee9c86,",
        "Visualisation categorical.Violet": "S:e2576c7b3f3e6ec40f50786bb5bd6976df3739ee,",
        "Visualisation categorical.Turquoise": "S:d16853591952eff62240af846437b08783bd33fc,",
        "Visualisation categorical.Orange": "S:f1f2ae117f7e12399100c39e4aef9fabe7764a90,",
        "Visualisation categorical.Green": "S:bbc8f8d33a98abd6a27886274a49c2dfadbcd6d5,",
        "Visualisation categorical.Purple": "S:b36038669a706bd9a1dfad595436f58b1c7b04e0,",
        "Visualisation categorical.Blue": "S:657d44d68d2bc05f3ae6a96fed63ff3268edabec,",
        "Visualisation categorical.Magenta": "S:360e79c864b97c0de91a4c5e7457989b8107fe8b,",
        "Visualisation categorical.Brown": "S:f68b0191a8a8036ec2d55a4bd826037b4b86199a,",
        "Visualisation categorical.Lilac": "S:3963119380679b29572f93384babad68a92739ae,",
        "Visualisation categorical.Lime": "S:2c3b1375a0a44ef42335392ab8c47c4bffe5442c,",
        "Visualisation categorical.Ultramarine": "S:b9b5501077f852b9a804a9b1b700bdd82a26d357,",
        "Visualisation blue.100": "S:58502c8a314119a951f5a0aea69e092f51630d5f,",
        "Visualisation blue.200": "S:4575da4aedccc8e0190ff40566be2b48e01b2a1a,",
        "Visualisation blue.300": "S:8e948cf81e822baa16703c6c6bbb168f0fd9f446,",
        "Visualisation blue.400": "S:da78c4ab246f4215a38ec971871a4f3f461859ff,",
        "Visualisation blue.500": "S:9419a5345717e85e6e53b0665b28016c546a26ca,",
        "Visualisation blue.600": "S:5c438ef12c03d878ee445e46a20c94c06bd08b5b,",
        "Supporting styles.button-2": "S:386e6032369d4afb70f6cdd877e68d35b8c633da,",
        "Supporting styles.button-1": "S:9e586aea5e59f0a049e514ebf8bebcc105d6fe13,",
        "Supporting styles.caption.semibold": "S:ac4ce71f7e75f9f7523b395c2af0cf02a9afc739,",
        "Supporting styles.caption.regular": "S:ebaa0a1047ad9656196bb81ba911d70dfd804a5e,",
        "Supporting styles.data-text.semibold": "S:bda5082ab35833f7ca5e4645788110a711fbad81,",
        "Supporting styles.data-text.regular": "S:68d2276c8fcc12be124fae70f67f42c7c40a019d,",
        "Subtitles.Subtitle-4": "S:c9a71fea92bec3ac56b05cb62e6677917d7b83d7,",
        "Subtitles.Subtitle-3": "S:b1467fb90c28164ef8f5661f543f0a2c90f9e097,",
        "Subtitles.Subtitle-2": "S:733d689e88d40287e27b315c6ad1bc91bd309ccb,",
        "Subtitles.Subtitle-1": "S:5508e2bdd3741f8100395e8e7ae21e8b5582f155,",
        "Body.body-5.semibold": "S:c6c5af9872225aca8c81aeed2fa9e7076d26d0e4,",
        "Body.body-5.regular": "S:ca88e73c016985dca58c1597e3700491c90ca055,",
        "Body.body-4.semibold": "S:de98fb86c94196e8d79009af9ee75469db5604ad,",
        "Body.body-4.regular": "S:832d57409843ff61bfec4ff377cf839b38a24532,",
        "Body.body-3.semibold": "S:74d750a225314444be274fe08a045e3e2439cdb7,",
        "Body.body-3.regular": "S:117e5101cc26414664e1ea208e2c481bf406d079,",
        "Body.body-2.semibold": "S:7fd84059db78023c499d672b1ce2fc69b3205cba,",
        "Body.body-2.regular": "S:37bfa3f4b28c82ab6863e1d9829f54d0c381d6f0,",
        "Body.body-1.semibold": "S:d7db7f7ef28be299cbf8c9adc96f9c7bafceeec5,",
        "Body.body-1.regular": "S:8089877f31d64fa6258763649737425092dae7fd,",
        "Headings.Heading-5": "S:af777b1490d9761e2f18a562a3e13700cab44bf6,",
        "Headings.Heading-4": "S:516389388a45bc050272d352b58d94f9bef2c803,",
        "Headings.Heading-3": "S:9f732a510946a497ec929f1af4e979e8c1333768,",
        "Headings.Heading-2": "S:48d0c492e1d15da5d9ae1a8406d296c680615732,",
        "Headings.Heading-1": "S:309858aefb03f7e2f0fa2f8fbd07178e7499a19a,",
        "Headings.Hero-3": "S:74513d5b47c3464088496514250b5baa5a940349,",
        "Headings.Hero-2": "S:05bbdc4498e68932e35fa11cd3cf46a69b691486,",
        "Headings.Hero-1": "S:757f40053f544054389131ba9d40a76c2e4894c3,",
        "--shadow-s": "S:ff49c0212d6fa224cf1ce458502083616e322058,",
        "--shadow-m": "S:634a0e62c6480f3e2e315c27116084575d06c1b5,",
        "--shadow-l": "S:a354ce06d3537250d93fa08d1f8a1f144a423498,"
      }
    },
    {
      "id": "0a500fa7ded024c81388a4445c47c790bed94169",
      "name": "Web / PIM",
      "selectedTokenSets": {
        "Global": "source",
        "Palette/Design System": "disabled",
        "Palette/Compact": "disabled",
        "Palette/Infographics": "disabled",
        "Palette/Exness": "disabled",
        "Palette/Neutral": "disabled",
        "Palette/PIM": "enabled",
        "Palette/PDA": "disabled",
        "Common": "disabled"
      },
      "$figmaStyleReferences": {}
    },
    {
      "id": "52ebebbdd8aa423c2cf87548a351694d8f4b7a52",
      "name": "Web / Exness",
      "selectedTokenSets": {
        "Global": "source",
        "Palette/Design System": "disabled",
        "Palette/Compact": "disabled",
        "Palette/Infographics": "disabled",
        "Palette/Exness": "enabled",
        "Palette/Neutral": "disabled",
        "Palette/PIM": "disabled",
        "Palette/PDA": "disabled",
        "Common": "disabled"
      },
      "$figmaStyleReferences": {}
    },
    {
      "id": "c86f3fc6307f128c7e6d483ca12443f4036eb693",
      "name": "Web / Neutral",
      "selectedTokenSets": {
        "Global": "source",
        "Palette/Design System": "disabled",
        "Palette/Compact": "disabled",
        "Palette/Infographics": "disabled",
        "Palette/Exness": "disabled",
        "Palette/Neutral": "enabled",
        "Palette/PIM": "disabled",
        "Palette/PDA": "disabled",
        "Common": "disabled"
      },
      "$figmaStyleReferences": {}
    },
    {
      "id": "1897eeb16f7ca84940fb25659b3800c0bde6c2c8",
      "name": "Web / Common",
      "selectedTokenSets": {
        "Global": "source",
        "Palette/Design System": "disabled",
        "Palette/Compact": "enabled",
        "Palette/Infographics": "disabled",
        "Palette/Exness": "disabled",
        "Palette/Neutral": "disabled",
        "Palette/PIM": "disabled",
        "Palette/PDA": "disabled",
        "Common": "disabled"
      },
      "$figmaStyleReferences": {}
    },
    {
      "id": "3d69f5fade4bf9ffbe0b1affa3709685a428547e",
      "name": "Common / Infographics",
      "selectedTokenSets": {
        "Global": "source",
        "Palette/Design System": "disabled",
        "Palette/Compact": "disabled",
        "Palette/Infographics": "enabled",
        "Palette/Exness": "disabled",
        "Palette/Neutral": "disabled",
        "Palette/PIM": "disabled",
        "Palette/PDA": "disabled",
        "Common": "disabled"
      },
      "$figmaStyleReferences": {}
    },
    {
      "id": "2c24e097be8ca1c99e9f240dee0bbbe6c3a2a598",
      "name": "Web / PDA",
      "selectedTokenSets": {
        "Global": "source",
        "Palette/Design System": "disabled",
        "Palette/Compact": "disabled",
        "Palette/Infographics": "disabled",
        "Palette/Exness": "disabled",
        "Palette/Neutral": "disabled",
        "Palette/PIM": "disabled",
        "Palette/PDA": "enabled",
        "Common": "disabled"
      },
      "$figmaStyleReferences": {}
    }
  ],
  "$metadata": {
    "tokenSetOrder": [
      "Global",
      "Palette/Design System",
      "Palette/Compact",
      "Palette/Infographics",
      "Palette/Exness",
      "Palette/Neutral",
      "Palette/PIM",
      "Palette/PDA",
      "Common"
    ]
  }
}